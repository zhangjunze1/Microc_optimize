// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

let first  (a, _, _) = a
let second (_, b, _) = b
let third  (_, _, c) = c

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 26 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | SELFPLUS
  | SELFMINUS
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | STRING
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTCHAR of (char)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_SELFPLUS
    | TOKEN_SELFMINUS
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_STRING
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTCHAR
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_VardecAndAssignment
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_ConstString
    | NONTERM_Const
    | NONTERM_ConstChar
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | NOT  -> 11 
  | SEQOR  -> 12 
  | SEQAND  -> 13 
  | EQ  -> 14 
  | NE  -> 15 
  | GT  -> 16 
  | LT  -> 17 
  | GE  -> 18 
  | LE  -> 19 
  | PLUS  -> 20 
  | MINUS  -> 21 
  | TIMES  -> 22 
  | DIV  -> 23 
  | MOD  -> 24 
  | SELFPLUS  -> 25 
  | SELFMINUS  -> 26 
  | CHAR  -> 27 
  | ELSE  -> 28 
  | IF  -> 29 
  | INT  -> 30 
  | NULL  -> 31 
  | PRINT  -> 32 
  | PRINTLN  -> 33 
  | RETURN  -> 34 
  | VOID  -> 35 
  | WHILE  -> 36 
  | FOR  -> 37 
  | STRING  -> 38 
  | CSTSTRING _ -> 39 
  | NAME _ -> 40 
  | CSTCHAR _ -> 41 
  | CSTINT _ -> 42 
  | CSTBOOL _ -> 43 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_NOT 
  | 12 -> TOKEN_SEQOR 
  | 13 -> TOKEN_SEQAND 
  | 14 -> TOKEN_EQ 
  | 15 -> TOKEN_NE 
  | 16 -> TOKEN_GT 
  | 17 -> TOKEN_LT 
  | 18 -> TOKEN_GE 
  | 19 -> TOKEN_LE 
  | 20 -> TOKEN_PLUS 
  | 21 -> TOKEN_MINUS 
  | 22 -> TOKEN_TIMES 
  | 23 -> TOKEN_DIV 
  | 24 -> TOKEN_MOD 
  | 25 -> TOKEN_SELFPLUS 
  | 26 -> TOKEN_SELFMINUS 
  | 27 -> TOKEN_CHAR 
  | 28 -> TOKEN_ELSE 
  | 29 -> TOKEN_IF 
  | 30 -> TOKEN_INT 
  | 31 -> TOKEN_NULL 
  | 32 -> TOKEN_PRINT 
  | 33 -> TOKEN_PRINTLN 
  | 34 -> TOKEN_RETURN 
  | 35 -> TOKEN_VOID 
  | 36 -> TOKEN_WHILE 
  | 37 -> TOKEN_FOR 
  | 38 -> TOKEN_STRING 
  | 39 -> TOKEN_CSTSTRING 
  | 40 -> TOKEN_NAME 
  | 41 -> TOKEN_CSTCHAR 
  | 42 -> TOKEN_CSTINT 
  | 43 -> TOKEN_CSTBOOL 
  | 46 -> TOKEN_end_of_input
  | 44 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Topdec 
    | 7 -> NONTERM_Vardec 
    | 8 -> NONTERM_VardecAndAssignment 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Vardesc 
    | 13 -> NONTERM_Vardesc 
    | 14 -> NONTERM_Fundec 
    | 15 -> NONTERM_Fundec 
    | 16 -> NONTERM_Paramdecs 
    | 17 -> NONTERM_Paramdecs 
    | 18 -> NONTERM_Paramdecs1 
    | 19 -> NONTERM_Paramdecs1 
    | 20 -> NONTERM_Block 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_StmtOrDecSeq 
    | 24 -> NONTERM_StmtOrDecSeq 
    | 25 -> NONTERM_Stmt 
    | 26 -> NONTERM_Stmt 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtU 
    | 35 -> NONTERM_StmtU 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_Expr 
    | 38 -> NONTERM_Expr 
    | 39 -> NONTERM_ExprNotAccess 
    | 40 -> NONTERM_ExprNotAccess 
    | 41 -> NONTERM_ExprNotAccess 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_AtExprNotAccess 
    | 64 -> NONTERM_AtExprNotAccess 
    | 65 -> NONTERM_AtExprNotAccess 
    | 66 -> NONTERM_AtExprNotAccess 
    | 67 -> NONTERM_AtExprNotAccess 
    | 68 -> NONTERM_Access 
    | 69 -> NONTERM_Access 
    | 70 -> NONTERM_Access 
    | 71 -> NONTERM_Access 
    | 72 -> NONTERM_Access 
    | 73 -> NONTERM_Exprs 
    | 74 -> NONTERM_Exprs 
    | 75 -> NONTERM_Exprs1 
    | 76 -> NONTERM_Exprs1 
    | 77 -> NONTERM_ConstString 
    | 78 -> NONTERM_Const 
    | 79 -> NONTERM_Const 
    | 80 -> NONTERM_Const 
    | 81 -> NONTERM_Const 
    | 82 -> NONTERM_ConstChar 
    | 83 -> NONTERM_Type 
    | 84 -> NONTERM_Type 
    | 85 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 46 
let _fsyacc_tagOfErrorTerminal = 44

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | SELFPLUS  -> "SELFPLUS" 
  | SELFMINUS  -> "SELFMINUS" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | STRING  -> "STRING" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTCHAR _ -> "CSTCHAR" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | SELFPLUS  -> (null : System.Object) 
  | SELFMINUS  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | STRING  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTCHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 31us; 40us; 35us; 40us; 41us; 40us; 43us; 48us; 46us; 48us; 49us; 48us; 52us; 48us; 6us; 65535us; 0us; 9us; 4us; 9us; 43us; 51us; 46us; 51us; 49us; 51us; 52us; 51us; 5us; 65535us; 11us; 15us; 12us; 14us; 13us; 14us; 20us; 21us; 22us; 23us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 31us; 32us; 35us; 36us; 3us; 65535us; 31us; 39us; 35us; 39us; 41us; 42us; 13us; 65535us; 33us; 34us; 37us; 38us; 43us; 63us; 46us; 63us; 49us; 63us; 52us; 63us; 70us; 63us; 71us; 63us; 73us; 63us; 74us; 63us; 82us; 63us; 83us; 63us; 92us; 63us; 4us; 65535us; 43us; 44us; 46us; 47us; 49us; 50us; 52us; 53us; 5us; 65535us; 43us; 46us; 46us; 46us; 49us; 46us; 52us; 46us; 71us; 95us; 11us; 65535us; 43us; 54us; 46us; 54us; 49us; 54us; 52us; 54us; 70us; 72us; 71us; 55us; 73us; 75us; 74us; 75us; 82us; 84us; 83us; 84us; 92us; 93us; 7us; 65535us; 43us; 56us; 46us; 56us; 49us; 56us; 52us; 56us; 71us; 56us; 74us; 94us; 83us; 96us; 44us; 65535us; 16us; 17us; 43us; 57us; 46us; 57us; 49us; 57us; 52us; 57us; 59us; 61us; 66us; 69us; 67us; 68us; 70us; 57us; 71us; 57us; 73us; 57us; 74us; 57us; 78us; 81us; 79us; 80us; 82us; 57us; 83us; 57us; 86us; 87us; 88us; 89us; 90us; 91us; 92us; 57us; 102us; 103us; 105us; 134us; 108us; 109us; 110us; 111us; 112us; 131us; 114us; 115us; 137us; 117us; 138us; 118us; 140us; 119us; 141us; 120us; 142us; 121us; 143us; 122us; 144us; 123us; 145us; 124us; 146us; 125us; 147us; 126us; 148us; 127us; 149us; 128us; 150us; 129us; 151us; 130us; 152us; 132us; 154us; 131us; 167us; 133us; 170us; 134us; 44us; 65535us; 16us; 99us; 43us; 99us; 46us; 99us; 49us; 99us; 52us; 99us; 59us; 99us; 66us; 99us; 67us; 99us; 70us; 99us; 71us; 99us; 73us; 99us; 74us; 99us; 78us; 99us; 79us; 99us; 82us; 99us; 83us; 99us; 86us; 99us; 88us; 99us; 90us; 99us; 92us; 99us; 102us; 99us; 105us; 99us; 108us; 99us; 110us; 99us; 112us; 100us; 114us; 99us; 137us; 99us; 138us; 99us; 140us; 99us; 141us; 99us; 142us; 99us; 143us; 99us; 144us; 99us; 145us; 99us; 146us; 99us; 147us; 99us; 148us; 99us; 149us; 99us; 150us; 99us; 151us; 99us; 152us; 99us; 154us; 100us; 167us; 99us; 170us; 99us; 45us; 65535us; 16us; 101us; 43us; 101us; 46us; 101us; 49us; 101us; 52us; 101us; 59us; 101us; 66us; 101us; 67us; 101us; 70us; 101us; 71us; 101us; 73us; 101us; 74us; 101us; 78us; 101us; 79us; 101us; 82us; 101us; 83us; 101us; 86us; 101us; 88us; 101us; 90us; 101us; 92us; 101us; 102us; 101us; 105us; 101us; 108us; 101us; 110us; 101us; 112us; 101us; 114us; 101us; 137us; 101us; 138us; 101us; 140us; 101us; 141us; 101us; 142us; 101us; 143us; 101us; 144us; 101us; 145us; 101us; 146us; 101us; 147us; 101us; 148us; 101us; 149us; 101us; 150us; 101us; 151us; 101us; 152us; 101us; 154us; 101us; 164us; 166us; 167us; 101us; 170us; 101us; 47us; 65535us; 16us; 98us; 43us; 98us; 46us; 98us; 49us; 98us; 52us; 98us; 59us; 98us; 66us; 98us; 67us; 98us; 70us; 98us; 71us; 98us; 73us; 98us; 74us; 98us; 78us; 98us; 79us; 98us; 82us; 98us; 83us; 98us; 86us; 98us; 88us; 98us; 90us; 98us; 92us; 98us; 102us; 98us; 105us; 98us; 108us; 98us; 110us; 98us; 112us; 97us; 114us; 98us; 137us; 98us; 138us; 98us; 140us; 98us; 141us; 98us; 142us; 98us; 143us; 98us; 144us; 98us; 145us; 98us; 146us; 98us; 147us; 98us; 148us; 98us; 149us; 98us; 150us; 98us; 151us; 98us; 152us; 98us; 154us; 97us; 158us; 159us; 161us; 162us; 164us; 165us; 167us; 98us; 170us; 98us; 1us; 65535us; 105us; 106us; 2us; 65535us; 105us; 169us; 170us; 171us; 45us; 65535us; 16us; 157us; 43us; 157us; 46us; 157us; 49us; 157us; 52us; 157us; 59us; 157us; 66us; 157us; 67us; 157us; 70us; 157us; 71us; 157us; 73us; 157us; 74us; 157us; 78us; 157us; 79us; 157us; 82us; 157us; 83us; 157us; 86us; 157us; 88us; 157us; 90us; 157us; 92us; 157us; 102us; 157us; 105us; 157us; 108us; 157us; 110us; 157us; 112us; 157us; 114us; 157us; 137us; 157us; 138us; 157us; 140us; 157us; 141us; 157us; 142us; 157us; 143us; 157us; 144us; 157us; 145us; 157us; 146us; 157us; 147us; 157us; 148us; 157us; 149us; 157us; 150us; 157us; 151us; 157us; 152us; 157us; 154us; 157us; 164us; 157us; 167us; 157us; 170us; 157us; 45us; 65535us; 16us; 153us; 43us; 153us; 46us; 153us; 49us; 153us; 52us; 153us; 59us; 153us; 66us; 153us; 67us; 153us; 70us; 153us; 71us; 153us; 73us; 153us; 74us; 153us; 78us; 153us; 79us; 153us; 82us; 153us; 83us; 153us; 86us; 153us; 88us; 153us; 90us; 153us; 92us; 153us; 102us; 153us; 105us; 153us; 108us; 153us; 110us; 153us; 112us; 153us; 114us; 153us; 137us; 153us; 138us; 153us; 140us; 153us; 141us; 153us; 142us; 153us; 143us; 153us; 144us; 153us; 145us; 153us; 146us; 153us; 147us; 153us; 148us; 153us; 149us; 153us; 150us; 153us; 151us; 153us; 152us; 153us; 154us; 153us; 164us; 153us; 167us; 153us; 170us; 153us; 45us; 65535us; 16us; 156us; 43us; 156us; 46us; 156us; 49us; 156us; 52us; 156us; 59us; 156us; 66us; 156us; 67us; 156us; 70us; 156us; 71us; 156us; 73us; 156us; 74us; 156us; 78us; 156us; 79us; 156us; 82us; 156us; 83us; 156us; 86us; 156us; 88us; 156us; 90us; 156us; 92us; 156us; 102us; 156us; 105us; 156us; 108us; 156us; 110us; 156us; 112us; 156us; 114us; 156us; 137us; 156us; 138us; 156us; 140us; 156us; 141us; 156us; 142us; 156us; 143us; 156us; 144us; 156us; 145us; 156us; 146us; 156us; 147us; 156us; 148us; 156us; 149us; 156us; 150us; 156us; 151us; 156us; 152us; 156us; 154us; 156us; 164us; 156us; 167us; 156us; 170us; 156us; 9us; 65535us; 0us; 13us; 4us; 13us; 31us; 11us; 35us; 11us; 41us; 11us; 43us; 12us; 46us; 12us; 49us; 12us; 52us; 12us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 26us; 32us; 35us; 38us; 42us; 56us; 61us; 67us; 79us; 87us; 132us; 177us; 223us; 271us; 273us; 276us; 322us; 368us; 414us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 7us; 2us; 7us; 8us; 3us; 7us; 8us; 15us; 4us; 7us; 8us; 12us; 13us; 3us; 7us; 12us; 13us; 1us; 8us; 16us; 8us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 9us; 2us; 9us; 15us; 1us; 10us; 3us; 10us; 12us; 13us; 1us; 11us; 3us; 11us; 12us; 13us; 1us; 11us; 2us; 12us; 13us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 3us; 25us; 31us; 34us; 1us; 26us; 16us; 27us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 27us; 2us; 28us; 29us; 1us; 28us; 16us; 29us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 29us; 1us; 30us; 1us; 31us; 3us; 31us; 34us; 35us; 1us; 31us; 3us; 31us; 34us; 35us; 18us; 31us; 34us; 35us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 16us; 31us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 31us; 3us; 31us; 34us; 35us; 1us; 31us; 1us; 31us; 2us; 31us; 34us; 1us; 31us; 1us; 32us; 2us; 32us; 36us; 1us; 32us; 2us; 32us; 36us; 17us; 32us; 36us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 16us; 32us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 32us; 2us; 32us; 36us; 1us; 32us; 1us; 33us; 1us; 33us; 16us; 33us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 33us; 16us; 33us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 33us; 16us; 33us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 33us; 1us; 33us; 1us; 34us; 1us; 35us; 1us; 36us; 4us; 37us; 40us; 69us; 72us; 3us; 37us; 40us; 72us; 1us; 38us; 2us; 38us; 64us; 1us; 39us; 1us; 40us; 16us; 40us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 2us; 41us; 68us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 42us; 16us; 42us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 2us; 43us; 44us; 16us; 43us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 3us; 44us; 64us; 69us; 2us; 44us; 77us; 1us; 44us; 16us; 44us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 1us; 44us; 16us; 45us; 46us; 47us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 16us; 45us; 46us; 48us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 16us; 45us; 46us; 50us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 16us; 45us; 46us; 50us; 51us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 16us; 45us; 46us; 50us; 51us; 52us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 16us; 45us; 46us; 50us; 51us; 52us; 53us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 16us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 16us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 16us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 16us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 16us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 16us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 16us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 16us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 15us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 16us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 16us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 72us; 17us; 45us; 46us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 75us; 76us; 1us; 45us; 1us; 46us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 2us; 64us; 69us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 2us; 67us; 72us; 1us; 68us; 1us; 69us; 2us; 69us; 72us; 1us; 69us; 2us; 70us; 71us; 2us; 70us; 72us; 1us; 71us; 1us; 72us; 1us; 72us; 1us; 74us; 1us; 76us; 1us; 76us; 1us; 77us; 1us; 78us; 1us; 79us; 1us; 80us; 1us; 80us; 1us; 81us; 1us; 82us; 1us; 83us; 1us; 84us; 1us; 85us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 27us; 31us; 36us; 40us; 42us; 59us; 61us; 64us; 66us; 70us; 72us; 76us; 78us; 81us; 83us; 85us; 87us; 89us; 91us; 93us; 95us; 97us; 99us; 101us; 103us; 105us; 107us; 109us; 112us; 114us; 116us; 118us; 120us; 122us; 124us; 126us; 128us; 130us; 132us; 134us; 136us; 138us; 140us; 144us; 146us; 163us; 165us; 168us; 170us; 187us; 189us; 191us; 193us; 197us; 199us; 203us; 222us; 239us; 241us; 245us; 247us; 249us; 252us; 254us; 256us; 259us; 261us; 264us; 282us; 299us; 301us; 304us; 306us; 308us; 310us; 327us; 329us; 346us; 348us; 365us; 367us; 369us; 371us; 373us; 375us; 380us; 384us; 386us; 389us; 391us; 393us; 410us; 413us; 415us; 417us; 419us; 421us; 438us; 441us; 458us; 462us; 465us; 467us; 484us; 486us; 503us; 520us; 537us; 554us; 571us; 588us; 605us; 622us; 639us; 656us; 673us; 690us; 707us; 724us; 740us; 757us; 774us; 792us; 794us; 796us; 798us; 800us; 802us; 804us; 806us; 808us; 810us; 812us; 814us; 816us; 818us; 820us; 822us; 824us; 826us; 828us; 830us; 833us; 835us; 837us; 839us; 841us; 844us; 846us; 848us; 851us; 853us; 856us; 859us; 861us; 863us; 865us; 867us; 869us; 871us; 873us; 875us; 877us; 879us; 881us; 883us; 885us; 887us; 889us; |]
let _fsyacc_action_rows = 182
let _fsyacc_actionTableElements = [|4us; 16386us; 27us; 180us; 30us; 179us; 35us; 29us; 38us; 181us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 4us; 16386us; 27us; 180us; 30us; 179us; 35us; 29us; 38us; 181us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 1us; 32768us; 7us; 10us; 0us; 16390us; 3us; 32768us; 1us; 22us; 22us; 20us; 40us; 18us; 3us; 32768us; 1us; 22us; 22us; 20us; 40us; 18us; 3us; 32768us; 1us; 22us; 22us; 20us; 40us; 19us; 2us; 16391us; 5us; 25us; 9us; 16us; 1us; 16391us; 5us; 25us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 15us; 16392us; 12us; 152us; 13us; 151us; 14us; 145us; 15us; 146us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 0us; 16393us; 1us; 16393us; 1us; 35us; 3us; 32768us; 1us; 22us; 22us; 20us; 40us; 18us; 1us; 16394us; 5us; 25us; 3us; 32768us; 1us; 22us; 22us; 20us; 40us; 18us; 2us; 32768us; 2us; 24us; 5us; 25us; 0us; 16395us; 2us; 32768us; 6us; 26us; 42us; 27us; 0us; 16396us; 1us; 32768us; 6us; 28us; 0us; 16397us; 1us; 32768us; 40us; 30us; 1us; 32768us; 1us; 31us; 3us; 16400us; 27us; 180us; 30us; 179us; 38us; 181us; 1us; 32768us; 2us; 33us; 1us; 32768us; 3us; 43us; 0us; 16398us; 3us; 16400us; 27us; 180us; 30us; 179us; 38us; 181us; 1us; 32768us; 2us; 37us; 1us; 32768us; 3us; 43us; 0us; 16399us; 0us; 16401us; 1us; 16402us; 8us; 41us; 3us; 32768us; 27us; 180us; 30us; 179us; 38us; 181us; 0us; 16403us; 23us; 16405us; 1us; 154us; 3us; 43us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 27us; 180us; 29us; 65us; 30us; 179us; 31us; 177us; 32us; 110us; 33us; 139us; 34us; 59us; 36us; 77us; 37us; 85us; 38us; 181us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 1us; 32768us; 4us; 45us; 0us; 16404us; 23us; 16405us; 1us; 154us; 3us; 43us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 27us; 180us; 29us; 65us; 30us; 179us; 31us; 177us; 32us; 110us; 33us; 139us; 34us; 59us; 36us; 77us; 37us; 85us; 38us; 181us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 0us; 16406us; 1us; 32768us; 7us; 49us; 23us; 16405us; 1us; 154us; 3us; 43us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 27us; 180us; 29us; 65us; 30us; 179us; 31us; 177us; 32us; 110us; 33us; 139us; 34us; 59us; 36us; 77us; 37us; 85us; 38us; 181us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 0us; 16407us; 1us; 32768us; 7us; 52us; 23us; 16405us; 1us; 154us; 3us; 43us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 27us; 180us; 29us; 65us; 30us; 179us; 31us; 177us; 32us; 110us; 33us; 139us; 34us; 59us; 36us; 77us; 37us; 85us; 38us; 181us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 0us; 16408us; 0us; 16409us; 1us; 16409us; 28us; 74us; 0us; 16410us; 16us; 32768us; 7us; 58us; 12us; 152us; 13us; 151us; 14us; 145us; 15us; 146us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 0us; 16411us; 16us; 32768us; 1us; 154us; 7us; 60us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 0us; 16412us; 16us; 32768us; 7us; 62us; 12us; 152us; 13us; 151us; 14us; 145us; 15us; 146us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 0us; 16413us; 0us; 16414us; 1us; 32768us; 1us; 66us; 1us; 32768us; 1us; 67us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 16us; 32768us; 2us; 71us; 12us; 152us; 13us; 151us; 14us; 145us; 15us; 146us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 16us; 32768us; 2us; 70us; 12us; 152us; 13us; 151us; 14us; 145us; 15us; 146us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 20us; 32768us; 1us; 154us; 3us; 43us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 29us; 64us; 31us; 177us; 32us; 110us; 33us; 139us; 34us; 59us; 36us; 76us; 37us; 85us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 20us; 32768us; 1us; 154us; 3us; 43us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 29us; 65us; 31us; 177us; 32us; 110us; 33us; 139us; 34us; 59us; 36us; 77us; 37us; 85us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 1us; 32768us; 28us; 73us; 20us; 32768us; 1us; 154us; 3us; 43us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 29us; 64us; 31us; 177us; 32us; 110us; 33us; 139us; 34us; 59us; 36us; 76us; 37us; 85us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 20us; 32768us; 1us; 154us; 3us; 43us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 29us; 65us; 31us; 177us; 32us; 110us; 33us; 139us; 34us; 59us; 36us; 77us; 37us; 85us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 0us; 16415us; 1us; 32768us; 1us; 78us; 1us; 32768us; 1us; 79us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 16us; 32768us; 2us; 83us; 12us; 152us; 13us; 151us; 14us; 145us; 15us; 146us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 16us; 32768us; 2us; 82us; 12us; 152us; 13us; 151us; 14us; 145us; 15us; 146us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 20us; 32768us; 1us; 154us; 3us; 43us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 29us; 64us; 31us; 177us; 32us; 110us; 33us; 139us; 34us; 59us; 36us; 76us; 37us; 85us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 20us; 32768us; 1us; 154us; 3us; 43us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 29us; 65us; 31us; 177us; 32us; 110us; 33us; 139us; 34us; 59us; 36us; 77us; 37us; 85us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 0us; 16416us; 1us; 32768us; 1us; 86us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 16us; 32768us; 7us; 88us; 12us; 152us; 13us; 151us; 14us; 145us; 15us; 146us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 16us; 32768us; 7us; 90us; 12us; 152us; 13us; 151us; 14us; 145us; 15us; 146us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 16us; 32768us; 2us; 92us; 12us; 152us; 13us; 151us; 14us; 145us; 15us; 146us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 20us; 32768us; 1us; 154us; 3us; 43us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 29us; 64us; 31us; 177us; 32us; 110us; 33us; 139us; 34us; 59us; 36us; 76us; 37us; 85us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 0us; 16417us; 0us; 16418us; 0us; 16419us; 0us; 16420us; 3us; 16421us; 2us; 163us; 5us; 167us; 9us; 102us; 2us; 16421us; 5us; 167us; 9us; 102us; 0us; 16422us; 1us; 16422us; 2us; 155us; 0us; 16423us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 15us; 16424us; 12us; 152us; 13us; 151us; 14us; 145us; 15us; 146us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 1us; 16452us; 1us; 105us; 15us; 16457us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 1us; 32768us; 2us; 107us; 0us; 16425us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 0us; 16426us; 15us; 32768us; 1us; 112us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 15us; 16427us; 12us; 152us; 13us; 151us; 14us; 145us; 15us; 146us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 113us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 1us; 16461us; 8us; 114us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 16us; 32768us; 2us; 116us; 12us; 152us; 13us; 151us; 14us; 145us; 15us; 146us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 0us; 16428us; 0us; 16431us; 0us; 16432us; 5us; 16434us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 5us; 16435us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 2us; 16436us; 25us; 135us; 26us; 136us; 2us; 16437us; 25us; 135us; 26us; 136us; 2us; 16438us; 25us; 135us; 26us; 136us; 11us; 16439us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 11us; 16440us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 11us; 16441us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 11us; 16442us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 11us; 16443us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 11us; 16444us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 13us; 16445us; 14us; 145us; 15us; 146us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 15us; 32768us; 12us; 152us; 13us; 151us; 14us; 145us; 15us; 146us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 14us; 16446us; 13us; 151us; 14us; 145us; 15us; 146us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 16us; 32768us; 6us; 168us; 12us; 152us; 13us; 151us; 14us; 145us; 15us; 146us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 16us; 16459us; 8us; 170us; 12us; 152us; 13us; 151us; 14us; 145us; 15us; 146us; 16us; 147us; 17us; 148us; 18us; 149us; 19us; 150us; 20us; 140us; 21us; 141us; 22us; 142us; 23us; 143us; 24us; 144us; 25us; 135us; 26us; 136us; 0us; 16429us; 0us; 16430us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 0us; 16433us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 0us; 16447us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 0us; 16448us; 0us; 16449us; 0us; 16450us; 3us; 32768us; 1us; 161us; 22us; 164us; 40us; 160us; 1us; 16451us; 5us; 167us; 0us; 16452us; 3us; 32768us; 1us; 161us; 22us; 164us; 40us; 160us; 2us; 32768us; 2us; 163us; 5us; 167us; 0us; 16453us; 10us; 32768us; 1us; 154us; 10us; 158us; 21us; 175us; 22us; 164us; 31us; 177us; 39us; 172us; 40us; 160us; 41us; 178us; 42us; 173us; 43us; 174us; 1us; 16454us; 5us; 167us; 0us; 16455us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 0us; 16456us; 0us; 16458us; 15us; 32768us; 1us; 154us; 10us; 158us; 11us; 108us; 21us; 175us; 22us; 164us; 25us; 137us; 26us; 138us; 31us; 177us; 32us; 110us; 33us; 139us; 39us; 172us; 40us; 104us; 41us; 178us; 42us; 173us; 43us; 174us; 0us; 16460us; 0us; 16461us; 0us; 16462us; 0us; 16463us; 1us; 32768us; 42us; 176us; 0us; 16464us; 0us; 16465us; 0us; 16466us; 0us; 16467us; 0us; 16468us; 0us; 16469us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 5us; 6us; 8us; 9us; 14us; 15us; 17us; 18us; 19us; 21us; 22us; 26us; 30us; 34us; 37us; 39us; 55us; 71us; 72us; 74us; 78us; 80us; 84us; 87us; 88us; 91us; 92us; 94us; 95us; 97us; 99us; 103us; 105us; 107us; 108us; 112us; 114us; 116us; 117us; 118us; 120us; 124us; 125us; 149us; 151us; 152us; 176us; 177us; 179us; 203us; 204us; 206us; 230us; 231us; 232us; 234us; 235us; 252us; 253us; 270us; 271us; 288us; 289us; 290us; 292us; 294us; 310us; 326us; 343us; 360us; 381us; 402us; 404us; 425us; 446us; 447us; 449us; 451us; 467us; 483us; 500us; 517us; 538us; 559us; 560us; 562us; 578us; 595us; 611us; 628us; 644us; 661us; 682us; 683us; 684us; 685us; 686us; 690us; 693us; 694us; 696us; 697us; 713us; 729us; 731us; 747us; 749us; 750us; 766us; 767us; 783us; 799us; 815us; 817us; 833us; 850us; 851us; 852us; 853us; 859us; 865us; 868us; 871us; 874us; 886us; 898us; 910us; 922us; 934us; 946us; 960us; 976us; 991us; 1008us; 1025us; 1026us; 1027us; 1043us; 1059us; 1060us; 1076us; 1092us; 1108us; 1124us; 1140us; 1156us; 1172us; 1188us; 1204us; 1220us; 1236us; 1252us; 1268us; 1269us; 1285us; 1286us; 1287us; 1288us; 1292us; 1294us; 1295us; 1299us; 1302us; 1303us; 1314us; 1316us; 1317us; 1333us; 1334us; 1335us; 1351us; 1352us; 1353us; 1354us; 1355us; 1357us; 1358us; 1359us; 1360us; 1361us; 1362us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 2us; 4us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 9us; 7us; 5us; 5us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 6us; 2us; 2us; 2us; 2us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 1us; 1us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 4us; 5us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 20us; 20us; 21us; 22us; 22us; 22us; 22us; 23us; 24us; 24us; 24us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 65535us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 65535us; 65535us; 65535us; 16399us; 16401us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 16407us; 65535us; 65535us; 16408us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 16418us; 16419us; 16420us; 65535us; 65535us; 16422us; 65535us; 16423us; 65535us; 65535us; 65535us; 65535us; 65535us; 16425us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16428us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16429us; 16430us; 65535us; 65535us; 16433us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16447us; 65535us; 16448us; 16449us; 16450us; 65535us; 65535us; 16452us; 65535us; 65535us; 16453us; 65535us; 65535us; 16455us; 65535us; 16456us; 16458us; 65535us; 16460us; 16461us; 16462us; 16463us; 65535us; 16464us; 16465us; 16466us; 16467us; 16468us; 16469us; |]
let _fsyacc_reductions ()  =    [| 
# 448 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 457 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "CPar.fsy"
                                                               Prog _1 
                   )
# 50 "CPar.fsy"
                 : Absyn.program));
# 468 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "CPar.fsy"
                                                               [] 
                   )
# 55 "CPar.fsy"
                 : 'gentype_Topdecs));
# 478 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 56 "CPar.fsy"
                 : 'gentype_Topdecs));
# 490 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 60 "CPar.fsy"
                 : 'gentype_Topdec));
# 501 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "CPar.fsy"
                                                               _1 
                   )
# 61 "CPar.fsy"
                 : 'gentype_Topdec));
# 512 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssignment in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "CPar.fsy"
                                                               VardecAndAssignment (first _1, second _1 ,third _1)  
                   )
# 62 "CPar.fsy"
                 : 'gentype_Topdec));
# 523 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 80 "CPar.fsy"
                 : 'gentype_Vardec));
# 535 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "CPar.fsy"
                                                       ((fst _2) _1, snd _2 , _4) 
                   )
# 85 "CPar.fsy"
                 : 'gentype_VardecAndAssignment));
# 548 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 96 "CPar.fsy"
                 : 'gentype_Vardesc));
# 559 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 101 "CPar.fsy"
                 : 'gentype_Vardesc));
# 570 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "CPar.fsy"
                                                               _2                                      
                   )
# 103 "CPar.fsy"
                 : 'gentype_Vardesc));
# 581 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 105 "CPar.fsy"
                 : 'gentype_Vardesc));
# 592 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 107 "CPar.fsy"
                 : 'gentype_Vardesc));
# 604 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 112 "CPar.fsy"
                 : 'gentype_Fundec));
# 617 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 114 "CPar.fsy"
                 : 'gentype_Fundec));
# 631 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "CPar.fsy"
                                                               [] 
                   )
# 119 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 641 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "CPar.fsy"
                                                               _1 
                   )
# 120 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 652 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "CPar.fsy"
                                                               [_1]     
                   )
# 124 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 663 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 125 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 675 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CPar.fsy"
                                                               Block _2 
                   )
# 130 "CPar.fsy"
                 : 'gentype_Block));
# 686 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               [] 
                   )
# 134 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 696 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 135 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 708 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 136 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 720 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssignment in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "CPar.fsy"
                                                                  DecAndAssign (first _1, second _1, third _1) :: _3 
                   )
# 137 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 732 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               _1 
                   )
# 141 "CPar.fsy"
                 : 'gentype_Stmt));
# 743 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               _1 
                   )
# 142 "CPar.fsy"
                 : 'gentype_Stmt));
# 754 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 146 "CPar.fsy"
                 : 'gentype_StmtM));
# 765 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               Return None          
                   )
# 147 "CPar.fsy"
                 : 'gentype_StmtM));
# 775 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 148 "CPar.fsy"
                 : 'gentype_StmtM));
# 786 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                               _1                   
                   )
# 149 "CPar.fsy"
                 : 'gentype_StmtM));
# 797 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 150 "CPar.fsy"
                 : 'gentype_StmtM));
# 810 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 151 "CPar.fsy"
                 : 'gentype_StmtM));
# 822 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                                        For(_3,_5,_7,_9)  
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtM));
# 836 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtU));
# 849 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 157 "CPar.fsy"
                 : 'gentype_StmtU));
# 861 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 158 "CPar.fsy"
                 : 'gentype_StmtU));
# 873 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "CPar.fsy"
                                                               Access _1           
                   )
# 162 "CPar.fsy"
                 : 'gentype_Expr));
# 884 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "CPar.fsy"
                                                               _1                  
                   )
# 163 "CPar.fsy"
                 : 'gentype_Expr));
# 895 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               _1                  
                   )
# 167 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 906 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 168 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 918 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 169 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 930 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 170 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 941 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 171 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 952 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> string in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               Print(_3 , _5)      
                   )
# 172 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 964 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               Prim1("W++", _1)     
                   )
# 173 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 975 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               Prim1("W--", _1)     
                   )
# 174 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 986 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               Prim1("++W", _2)     
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 997 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               Prim1("--W", _2)     
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1008 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1018 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1030 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1042 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1054 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1066 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1078 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1090 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1102 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1114 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1126 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1138 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1150 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1162 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1174 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                               CstI _1             
                   )
# 198 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1185 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               _2                  
                   )
# 199 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1196 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstChar in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               ConstChar (_1)      
                   )
# 200 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1207 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                               ConstString(_1)     
                   )
# 201 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1218 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                               Addr _2             
                   )
# 202 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1229 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "CPar.fsy"
                                                               AccVar _1           
                   )
# 206 "CPar.fsy"
                 : 'gentype_Access));
# 1240 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CPar.fsy"
                                                               _2                  
                   )
# 207 "CPar.fsy"
                 : 'gentype_Access));
# 1251 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 208 "CPar.fsy"
                 : 'gentype_Access));
# 1262 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 209 "CPar.fsy"
                 : 'gentype_Access));
# 1273 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 210 "CPar.fsy"
                 : 'gentype_Access));
# 1285 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               []       
                   )
# 214 "CPar.fsy"
                 : 'gentype_Exprs));
# 1295 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               _1       
                   )
# 215 "CPar.fsy"
                 : 'gentype_Exprs));
# 1306 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               [_1]     
                   )
# 219 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1317 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 220 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1329 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "CPar.fsy"
                                                               _1       
                   )
# 224 "CPar.fsy"
                 : 'gentype_ConstString));
# 1340 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                               _1       
                   )
# 228 "CPar.fsy"
                 : 'gentype_Const));
# 1351 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "CPar.fsy"
                                                               _1       
                   )
# 229 "CPar.fsy"
                 : 'gentype_Const));
# 1362 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "CPar.fsy"
                                                               - _2     
                   )
# 230 "CPar.fsy"
                 : 'gentype_Const));
# 1373 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "CPar.fsy"
                                                               -1       
                   )
# 231 "CPar.fsy"
                 : 'gentype_Const));
# 1383 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "CPar.fsy"
                                                               _1       
                   )
# 235 "CPar.fsy"
                 : 'gentype_ConstChar));
# 1394 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "CPar.fsy"
                                                               TypI     
                   )
# 239 "CPar.fsy"
                 : 'gentype_Type));
# 1404 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "CPar.fsy"
                                                               TypC     
                   )
# 240 "CPar.fsy"
                 : 'gentype_Type));
# 1414 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "CPar.fsy"
                                                               TypS     
                   )
# 241 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1425 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 47;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
